# TMUX_CONFIG_DIR=/home/metaory/.config/byobu
# M_THEME=$TMUX_CONFIG_DIR/meta.min.tmuxtheme

# set -g @FOOBAR 'WTFFF'

# run-shell '/usr/share/tmux-plugin-manager/tpm
# source-file $TMUX_CONFIG_DIR/profile.tmux

# set-environment -g TMUX_PLUGIN_MANAGER_PATH $TMUX_CONFIG_DIR/plugins
# set-environment -g M_THEME $TMUX_CONFIG_DIR/meta.min.tmuxtheme
# set -g @mtheme $TMUX_CONFIG_DIR/meta.min.tmuxtheme


# run $TMUX_CONFIG_DIR/plugins/tpm/tpm

# source-file $TMUX_CONFIG_DIR/keybindings.tmux


source-file $HOME/.config/tmux/profile.tmux
source-file $HOME/.config/tmux/keybindings.tmux
source-file $HOME/.config/tmux/tmux.mx

set -g @tpm_plugins ' \
 christoomey/vim-tmux-navigator'

set -g @plugin 'christoomey/vim-tmux-navigator'
run '~/.tmux/plugins/tpm/tpm'

source-file $HOME/.config/tmux/meta.min.tmuxtheme

# source-file $HOME/.tmux/plugins/vim-tmux-navigator/vim-tmux-navigator.tmux

# source-file $HOME/.config/mxc/tmux.mx \; source-file $HOME/.config/tmux/meta.min.tmuxtheme
# source-file ~/.config/tmux/meta.min.tmuxtheme
# source-file $XDG_CONFIG_HOME/byobu/meta.min.tmuxtheme
# run-shell "tmux source-file $HOME/.config/byobu/meta.min.tmuxtheme"
# display-message "SOURCED"
# source-file $XDG_CONFIG_HOME/mxc/tmux.mx \; source-file ${M_THEME}
# run-shell 'tmux source-file $XDG_CONFIG_HOME/byobu/meta.min.tmuxtheme'
# attach-session \; source-file $XDG_CONFIG_HOME/byobu/meta.min.tmuxtheme
# attach \; run-shell "tmux source-file $XDG_CONFIG_HOME/mxc/tmux.mx \; source-file $M_THEME"
# run-shell 'tmux source-file "${M_THEME}"'
# run-shell "tmux source-file $XDG_CONFIG_HOME/mxc/tmux.mx \; source-file $TMUX_CONFIG_DIR/meta.min.tmuxtheme"

# set-option -w  @WIC "$(shuf -n 1 -e $(cat ~/mxx/mico/uni-mico))"
# run-shell 'mxcolr --init'
# source-file $M_THEME

# #####################################################################
# #####################################################################
# #####################################################################
# set -g @plugin 'tmux-plugins/tmux-sidebar'
# set -g @plugin 'christoomey/vim-tmux-navigator'

# #####################################################################
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'arcticicestudio/nord-tmux'
# #####################################################################
# source-file $BYOBU_CONFIG_DIR/meta.tmuxtheme
# source-file $BYOBU_CONFIG_DIR/meta.dev.tmuxtheme
# source-file $BYOBU_CONFIG_DIR/meta.stable.tmuxtheme
# #####################################################################

#set-environment -g TMUX_PLUGIN_MANAGER_PATH "~/.config/byobu/plugins/"
#set-environment -g TMUX_PLUGIN_MANAGER_PATH "~/.byobu/plugins/"
# set-environment -g TMUX_TXX_THEME_ENV "stable"
# set-environment -g TMUX_TXX_THEME_ENV "#(awk '{print $2}' <<< $(xrdb -query | grep \"color$((( RANDOM % 2 ) + 1)):\"))"
# txx set-environment -g TMUX_TXX_THEME_ENV $(awk '{print $2}' <<< $(xrdb -query | grep "$bar"))

# run-shell -b 'cname="color$((( RANDOM % 2 ) + 1))"; tmux set-environment -g TMUX_TXX_THEME_ENV $(awk '{print $2}' <<< $(xrdb -query | grep "$cname"))'
# if-shell -b 'USHELL="$(basename "$(getent passwd $USER | cut -d: -f7)")"; [ $(tmux list-windows | wc -l) -eq 1 -a $(tmux list-panes | wc -l) -eq 1 -a $(pstree $PPID | egrep "\\b$USHELL\$" | grep -o $USHELL | wc -l) -eq 1 ]' detach 'send C-d'
# BYOBU_ACCENz=$(xrdb -query | grep "color$((( RANDOM % 8 ) + 1))" | awk '{print $2}')
# export META_TXX_THEME_ENV="stable"

# export BYOBU_TERM="xterm-256color"
# set-environment -g BYOBU_TERM "xterm-256color"



# tmux-plugins/tpm \
# set -g @tpm_plugins ' \
#  tmux-plugins/tpm \
# '
 # 
 # tmux-plugins/tmux-prefix-highlight \
 # tmux-plugins/tmux-sessionist \
 # wfxr/tmux-power \
 # arcticicestudio/nord-tmux \
 # Determinant/tmux-colortag \



# set -g @plugin 'tmux-plugins/tpm'


# run $BYOBU_CONFIG_DIR/plugins/tmux-fingers/tmux-fingers

# run $BYOBU_CONFIG_DIR/plugins/tpm/tpm

# set -g @plugin 'tmux-plugins/tmux-sessionist'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @plugin 'Morantron/tmux-fingers'
#

# set -g @plugin 'arcticicestudio/nord-tmux'
# set -g @plugin 'wfxr/tmux-power'
# set -g @tmux_power_theme 'moon'
# set -g @tmux_power_prefix_highlight_pos 'LR'

##############################################


 # if-shell -b "[ $(tmux display-message -p \"#{T:pane_current_command}\" | grep zsh | wc -l) -eq 1 -a $(tmux list-windows | wc -l) -eq 1 -a $(tmux list-panes | wc -l) -eq 1 ]" {

# set -gF @_-ENV_TX $ZETA_CX

  # if-shell -b "[ $(tmux list-sessions | wc -l) -gt 0 ]" {
  #   set -gF @S-ENV_BG $ZETA_CX
# } {
#   set -gF @S-ENV_BG $ZETA_CX
# }

# if-shell '[ -z "$META_UNO" ]' \
#   'VALUE=bar' \
#   'VALUE=baz'


# run 'tmux setenv -g RESULT $VALUE'
# run-shell -b 'cname="color$((( RANDOM % 2 ) + 1))"; tmux set-environment -g TMUX_TXX_THEME_ENV $(awk '{print $2}' <<< $(xrdb -query | grep "$cname"))'
# set -g  @S-ENV_BG  "$mxColor"
# set -gF @S_OPEN    "#0D47A1"
# META_UNO=uno
# MG=#0D4000
# MB=#0D47A1
# # run "FOO=$(awk '{print $2}' <<< $(xrdb -query | grep color$((( RANDOM % 8 ) + 1))))"
# # run "FOO=BAR"
#
# if-shell 'FOO=$(awk '{print $2}' <<< $(xrdb -query | grep color$((( RANDOM % 8 ) + 1)))); [[ "$META_UNO" == uno ]]' \
#   'VALUE=$MG' \
#   'VALUE=$MB'
# run 'tmux setenv -g @S-ENV_BG $VALUE'
# run 'tmux setenv -g @S-ENV_BG $VALUE'
# if [[(( $(tmux -V | cut -c 6-) < 2.1 ))]];then echo $?;else echo $?;fi

# if-shell '[ -z "$META_UNO" ]' \
#   'VALUE=bar' \
#   'VALUE=baz'
# run 'tmux setenv -g RESULT $VALUE'

# source-file "$BYOBU_CONFIG_DIR/meta.$META_TXX_THEME_ENV.tmuxtheme"

##############################################

# source-file $BYOBU_CONFIG_DIR/meta-nord.tmux
# source-file set -gF /home/metaory/docs/backup/arch/1612393494__21-02-04__07-04_wip2/wip2-meta.tmuxtheme
# source-file  /home/metaory/docs/backup/arch/1612374414__21-02-04__01-46_wip/meta.tmuxtheme

# source-file  /home/metaory/docs/backup/arch/1612076340__21-01-31__14-59_broken/.config/byobu/meta.tmuxtheme


# source-file $BYOBU_CONFIG_DIR/meta.tmuxtheme

# source-file $BYOBU_CONFIG_DIR/keybindings.tmux
#
# set -g remain-on-exit on
# #source-file $BYOBU_CONFIG_DIR/tmux-metaory.tmuxtheme
# source-file $BYOBU_CONFIG_DIR/tline.metaory.tmuxtheme

# set-option -g status on
#

# source "{repository_root}/powerline/bindings/tmux/powerline.conf"


# jimeh/tmux-themepack \
# jatap/tmux-base16-statusline \
# jimeh/tmux-themepack \
# arcticicestudio/nord-tmux \
# tmux-plugins/tmux-resurrect \
#nhdaly/tmux-better-mouse-mode \
#tmux-plugins/tmux-sensible \


# set -g @themepack 'powerline/block/blue'
# set -g @themepack 'powerline/double/blue'
# set -g @themepack 'powerline/default/blue'

# set -g @themepack 'powerline/block/cyan'
# set -g @themepack 'powerline/default/green'
# set -g @themepack 'powerline/double/magenta'

# set -g status-left-length 32

# source-file /usr/share/byobu/status/status

# set -g default-terminal "$TERM"
# tmux_right="uptime uptime #network #disk_io #custom #entropy raid reboot_required updates_available #apport #services #mail #users uptime #fan_speed #cpu_temp #battery #wifi_quality #processes load_average cpu_count cpu_freq memory #swap disk #whoami #hostname #ip_address #time_utc date time"
# source-file $BYOBU_CONFIG_DIR/status
# bind-key -T prefix  t clock-mode
# #
# source-file $BYOBU_CONFIG_DIR/meta/meta-theme.tmux


#
# set -gw pane-border-status top
#

# source-file /home/metaory/.config/byobu/plugins/tmux-themepack/src/powerline/default/blue.tmuxtheme
# source-file $BYOBU_CONFIG_DIR/plugins/tmux-themepack/src/powerline/default/blue.tmuxtheme
# /home/metaory/.config/byobu/plugins/tmux-themepack/src/powerline/default/blue.tmuxtheme

#
# txx show      > show.tmux
# txx show  -g  > showg.tmux
# txx showw     > showw.tmux
# txx showw  -g > showwg.tmux
# txx env       > env.tmux
# txx env  -g   > envg.tmux
# txx dp        > dp.tmux
# txx dp  -g    > dpg.tmux


# set -g @tpm_plugins ' \
 christoomey/vim-tmux-navigator'

# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'

